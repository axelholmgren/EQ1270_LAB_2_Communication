%% load
kth = load('kth.jpg');
hamilton = load('hamilton.jpg');

load('training.mat');
%% encode pic prep 1
%pic = imread('kth.jpg');
raw_pic = imread('hamilton.jpg');
pic = imresize(raw_pic,[1024 1024]);

[key,cPic] = encoder(pic)

%% Make some fucking noise! prep 2
h = [1 0.7 0.7];
dist_key = conv(received, h,'same');

%% Equalizer
% Equalizer 
L = 1;
for i = 1:31
A = [];
correct_bits = training(L+1:32);

for row = 0:31-L;
    for column = 0:L;
        A(row+1,column+1) = received(L+1-column+row);
    end;
end;

g = A\correct_bits;


reconstructed_key = filter(g,1,received);
mapped_key = sign(reconstructed_key);
recon_pic = decoder(mapped_key, cPic);

% Differentiated elements
E = nnz(correct_bits - reconstructed_key(L+1:32));

subplot(5,7,i);
image(recon_pic);
title(['L=',num2str(L),'E=' ,num2str(E)]);
L = L+1;
end

%% decode pic prep 3
%dPic = decoder(dist_key, cPic);
%axis square;
%image(dPic);
